@model StudentSquads.ViewModels.DesignationViewModel
@{
	ViewBag.Title = "PositionForm";
}

<h2>Назначение на должность</h2>
<form id="newPosition">
	<button class="btn btn-warning" id="save">Сохранить</button>
	<div class="form-group">
		<label>Член организации</label>
		<div class="tt-container">
			<input id="person" type="text" class="form-control" name="" value="" />
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(m => m.Position)
		@Html.TextBoxFor(m => m.Position, new { @class = "form-control", @id ="position" })
	</div>
	<div class="checkbox">
		<label>
			@Html.CheckBoxFor(m => m.HasRole, new {@id ="hasrole" }) Предоставить доступ к управленческим функциям?
		</label>
	</div>

</form>
@section scripts
{
<script>
	$(document).ready(function () {

		var vm = {};

	var people = new Bloodhound({
	datumTokenizer: Bloodhound.tokenizers.obj.whitespace('FIO'),
	queryTokenizer: Bloodhound.tokenizers.whitespace,
	remote: {
	url: '/api/people?query=%QUERY',
	wildcard: '%QUERY'
	}
	});

		$('#person').typeahead({
			minLength: 3,
			highlight: true
		}, {
	name: 'people',
	display: 'FIO',
	source: people
		}).on("typeahead:select", function (e, person)
		{
			vm.Id = person.Id;
		});
		$("#save").on("click", function () {
			vm.Position = document.getElementById('position').value;
			vm.HasRole = document.getElementById('hasrole').value;
		});
		//e-event e.preventDefault чтобы не через HTML форму
		$("#newPosition").submit(function (e)
		{
			e.preventDefault();

			$.ajax({
				url: "/api/Positions",
				method: "post",
				data: vm
			})
				.done(function () {
					toastr.success("Успешно сохранено");
				})
				.fail(function () {
					toastr.error("Произошла ошибка сохранения");
				});
		})
	});
</script>
}



