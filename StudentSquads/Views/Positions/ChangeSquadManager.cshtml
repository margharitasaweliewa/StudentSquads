@model StudentSquads.ViewModels.DesignationViewModel
@{
	ViewBag.Title = "ChangeSquadManager";
}

<h2>Подача заявки на смену ком. состава</h2>
<form id="newPosition">
	<buton class="btn btn-warning" type="submit">Отправить</buton>
	<div class="form-group">
		@Html.LabelFor(m => m.MainPositionId)
		@Html.DropDownListFor(m => m.MainPositionId, new SelectList(Model.MainPositions, "Id", "Name"), "", new { @class = "form-control" })
	</div>
	@*<div class="form-group">
			<label>Текущий исполнитель</label>
			<input id="oldperson" required type="text" class="form-control" name="" value="" />
		</div>*@
	<div class="form-group">
		<label>Претендент на должность</label>
		<div class="tt-container">
			<input id="person" data-rule-validPerson="true" required type="text" class="form-control" name="" value="" />
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(m => m.DocumentPath)
		@Html.TextBoxFor(m => m.DocumentPath, new { @class = "custom-file-input", type = "file", name = "upload" })
	</div>
</form>
@section scripts
{
	@Scripts.Render("~/bundles/jqueryval")
	<script>
		$(document).ready(function () {

			var vm = {};

			var people = new Bloodhound({
				datumTokenizer: Bloodhound.tokenizers.obj.whitespace('FIO'),
				queryTokenizer: Bloodhound.tokenizers.whitespace,
				remote: {
					url: '/api/people?query=%QUERY',
					wildcard: '%QUERY'
				}
			});

			$('#person').typeahead({
				minLength: 3,
				highlight: true
			}, {
				name: 'people',
				display: 'FIO',
				source: people
			}).on("typeahead:select", function (e, person) {
				vm.PersonId = person.Id;
			});
			$.validator.addMethod("validPerson", function () {
				return vm.PersonId && vm.PersonId != null;
			}, "Пожалуйста, выберите члена организации");
			$("#newPosition").submit(function (e) {
				e.preventDefault();
			    vm.Position = document.getElementById('position').value;
				vm.HasRole = document.getElementById('hasrole').value;
				if ($("#newPosition").valid()) {
					$.ajax({
						url: "/api/Positions",
						method: "post",
						data: vm
					})
						.done(function () {
							$("#position").val("");
							$("#person").typeahead("val", "");
							$("#hasrole").prop('checked', false);
							toastr.success("Успешно сохранено");
						})
						.fail(function () {
							toastr.error("Произошла ошибка сохранения");
						});
				}
			})

		});
	</script>
}



